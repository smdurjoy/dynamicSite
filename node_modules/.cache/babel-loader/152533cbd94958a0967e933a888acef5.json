{"ast":null,"code":"var _jsxFileName = \"/home/durjoy/Projects/dynamicSite/src/components/Analysis/Analysis.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { BarChart, Bar, ResponsiveContainer, XAxis, Tooltip } from \"recharts\";\nimport RestClient from \"../../RestAPI/RestClient\";\nimport AppUrl from \"../../RestAPI/AppUrl\";\nimport ReactHtmlParser from 'react-html-parser';\nimport Loader from \"../Loader/Loader\";\nimport WentWrong from \"../WentWrong/WentWrong\";\n\nclass Analysis extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      techDescription: '',\n      loading: true,\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    RestClient.GetRequest(AppUrl.ChartData).then(result => {\n      this.setState({\n        data: result,\n        loading: false\n      });\n      sess;\n    }).catch(error => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    });\n    RestClient.GetRequest(AppUrl.TechDesc).then(result => {\n      this.setState({\n        techDescription: result[0]['tech_description'],\n        loading: false\n      });\n    }).catch(error => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    if (this.state.error == true) {\n      return React.createElement(WentWrong, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    } else {\n      if (this.state.loading == true) {\n        return React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      } else {\n        let blue = \"rgba(0,115,230,0.8)\";\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(Container, {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"serviceMainTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"Technology Used\"), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(Col, {\n          style: {\n            width: '100%',\n            height: '300px'\n          },\n          lg: 6,\n          md: 12,\n          sm: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(ResponsiveContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(BarChart, {\n          width: 100,\n          height: 300,\n          data: this.state.data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(XAxis, {\n          dataKey: \"technology\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), React.createElement(Bar, {\n          dataKey: \"skill\",\n          fill: blue,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        })))), React.createElement(Col, {\n          lg: 6,\n          md: 12,\n          sm: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"text-justify des\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, ReactHtmlParser(this.state.techDescription))))));\n      }\n    }\n  }\n\n}\n\nexport default Analysis;","map":{"version":3,"sources":["/home/durjoy/Projects/dynamicSite/src/components/Analysis/Analysis.js"],"names":["React","Component","Fragment","Col","Container","Row","BarChart","Bar","ResponsiveContainer","XAxis","Tooltip","RestClient","AppUrl","ReactHtmlParser","Loader","WentWrong","Analysis","constructor","state","data","techDescription","loading","error","componentDidMount","GetRequest","ChartData","then","result","setState","sess","catch","TechDesc","render","blue","width","height"],"mappings":"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","sourcesContent":["import React, {Component,Fragment} from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport {BarChart, Bar, ResponsiveContainer, XAxis, Tooltip} from \"recharts\";\r\nimport RestClient from \"../../RestAPI/RestClient\";\r\nimport AppUrl from \"../../RestAPI/AppUrl\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport Loader from \"../Loader/Loader\";\r\nimport WentWrong from \"../WentWrong/WentWrong\";\r\n\r\nclass Analysis extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            data:[],\r\n            techDescription: '',\r\n            loading: true,\r\n            error: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        RestClient.GetRequest(AppUrl.ChartData).then(result => {\r\n            this.setState({data:result, loading: false})\r\n            sess\r\n        }).catch(error => {\r\n            this.setState({error:true, loading:false})\r\n        })\r\n\r\n        RestClient.GetRequest(AppUrl.TechDesc).then(result => {\r\n            this.setState({techDescription:result[0]['tech_description'], loading: false})\r\n        }).catch(error => {\r\n            this.setState({error:true, loading:false})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error == true) {\r\n            return <WentWrong />\r\n        } else {\r\n            if(this.state.loading == true) {\r\n                return <Loader />\r\n            } else {\r\n                let blue=\"rgba(0,115,230,0.8)\"\r\n                return (\r\n                    <Fragment>\r\n                        <Container className=\"text-center\">\r\n                            <h1 className=\"serviceMainTitle\">Technology Used</h1>\r\n                            <Row>\r\n                                <Col style={{width:'100%', height:'300px'}} lg={6} md={12} sm={12}>\r\n                                    <ResponsiveContainer>\r\n                                        <BarChart width={100} height={300} data={this.state.data}>\r\n                                            <XAxis dataKey=\"technology\"/>\r\n                                            <Tooltip/>\r\n                                            <Bar dataKey=\"skill\" fill={blue} >\r\n                                            </Bar>\r\n                                        </BarChart>\r\n                                    </ResponsiveContainer>\r\n                                </Col>\r\n\r\n                                <Col lg={6} md={12} sm={12}>\r\n                                    <p className=\"text-justify des\">\r\n                                        { ReactHtmlParser(this.state.techDescription) }\r\n                                    </p>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Fragment>\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Analysis;"]},"metadata":{},"sourceType":"module"}