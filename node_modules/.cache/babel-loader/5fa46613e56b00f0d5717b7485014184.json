{"ast":null,"code":"var _jsxFileName = \"/home/durjoy/projects/dynamicSite/src/components/Analysis/Analysis.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { BarChart, Bar, ResponsiveContainer, XAxis, Tooltip } from \"recharts\";\nimport RestClient from \"../../RestAPI/RestClient\";\nimport AppUrl from \"../../RestAPI/AppUrl\";\nimport ReactHtmlParser from 'react-html-parser';\nimport Loader from \"../Loader/Loader\";\n\nclass Analysis extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      techDescription: '',\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    RestClient.GetRequest(AppUrl.ChartData).then(result => {\n      this.setState({\n        data: result,\n        loading: false\n      });\n    }).catch(error => {});\n    RestClient.GetRequest(AppUrl.TechDesc).then(result => {\n      this.setState({\n        techDescription: result[0]['tech_description'],\n        loading: false\n      });\n    }).catch(error => {});\n  }\n\n  render() {\n    if (this.state.loading == true) {\n      return React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    } else {\n      let blue = \"rgba(0,115,230,0.8)\";\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"serviceMainTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Technology Used\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Col, {\n        style: {\n          width: '100%',\n          height: '300px'\n        },\n        lg: 6,\n        md: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(ResponsiveContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(BarChart, {\n        width: 100,\n        height: 300,\n        data: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"technology\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"skill\",\n        fill: blue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        lg: 6,\n        md: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-justify des\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, ReactHtmlParser(this.state.techDescription))))));\n    }\n  }\n\n}\n\nexport default Analysis;","map":{"version":3,"sources":["/home/durjoy/projects/dynamicSite/src/components/Analysis/Analysis.js"],"names":["React","Component","Fragment","Col","Container","Row","BarChart","Bar","ResponsiveContainer","XAxis","Tooltip","RestClient","AppUrl","ReactHtmlParser","Loader","Analysis","constructor","state","data","techDescription","loading","componentDidMount","GetRequest","ChartData","then","result","setState","catch","error","TechDesc","render","blue","width","height"],"mappings":"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","sourcesContent":["import React, {Component,Fragment} from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport {BarChart, Bar, ResponsiveContainer, XAxis, Tooltip} from \"recharts\";\r\nimport RestClient from \"../../RestAPI/RestClient\";\r\nimport AppUrl from \"../../RestAPI/AppUrl\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nclass Analysis extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            data:[],\r\n            techDescription: '',\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        RestClient.GetRequest(AppUrl.ChartData).then(result => {\r\n            this.setState({data:result, loading: false})\r\n        }).catch(error => {\r\n\r\n        })\r\n\r\n        RestClient.GetRequest(AppUrl.TechDesc).then(result => {\r\n            this.setState({techDescription:result[0]['tech_description'], loading: false})\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.loading == true) {\r\n            return <Loader />\r\n        } else {\r\n            let blue=\"rgba(0,115,230,0.8)\"\r\n            return (\r\n                <Fragment>\r\n                    <Container className=\"text-center\">\r\n                        <h1 className=\"serviceMainTitle\">Technology Used</h1>\r\n                        <Row>\r\n                            <Col style={{width:'100%', height:'300px'}} lg={6} md={12} sm={12}>\r\n                                <ResponsiveContainer>\r\n                                    <BarChart width={100} height={300} data={this.state.data}>\r\n                                        <XAxis dataKey=\"technology\"/>\r\n                                        <Tooltip/>\r\n                                        <Bar dataKey=\"skill\" fill={blue} >\r\n                                        </Bar>\r\n                                    </BarChart>\r\n                                </ResponsiveContainer>\r\n                            </Col>\r\n\r\n                            <Col lg={6} md={12} sm={12}>\r\n                                <p className=\"text-justify des\">\r\n                                    { ReactHtmlParser(this.state.techDescription) }\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Analysis;"]},"metadata":{},"sourceType":"module"}