{"ast":null,"code":"var _jsxFileName = \"/home/durjoy/Projects/dynamicSite/src/components/ContactSection/ContactSection.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faPhone } from \"@fortawesome/free-solid-svg-icons\";\nimport RestClient from \"../../RestAPI/RestClient\";\nimport AppUrl from \"../../RestAPI/AppUrl\";\nimport Loader from \"../Loader/Loader\";\nimport WentWrong from \"../WentWrong/WentWrong\";\n\nclass ContactSection extends Component {\n  constructor() {\n    super();\n    this.state = {\n      address: '',\n      email: '',\n      phone: '',\n      loaderClass: \"\",\n      mainDivClass: \"d-none\",\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    const sessionFooterData = sessionStorage.getItem('FooterData');\n\n    if (sessionFooterData == null) {\n      RestClient.GetRequest(AppUrl.Footer).then(result => {\n        const jsonData = result[0];\n        this.setState({\n          address: result[0]['address'],\n          email: result[0]['email'],\n          phone: result[0]['phone'],\n          loaderClass: \"d-none\",\n          mainDivClass: \"\"\n        });\n        sessionStorage.setItem('FooterData', JSON.stringify(jsonData));\n      }).catch(error => {\n        this.setState({\n          error: true,\n          loading: false\n        });\n      });\n    } else {\n      const footerDataJSON = JSON.parse(sessionFooterData);\n      this.setState({\n        address: footerDataJSON['address'],\n        email: footerDataJSON['email'],\n        phone: footerDataJSON['phone'],\n        loaderClass: \"d-none\",\n        mainDivClass: \"\"\n      });\n    }\n  }\n\n  sendContact() {\n    let name = document.getElementById(\"name\").value;\n    let email = document.getElementById(\"email\").value;\n    let message = document.getElementById(\"message\").value;\n    let contactForm = document.getElementById(\"contactForm\");\n    let submitContact = document.getElementById(\"submitContact\");\n    let jsonObject = {\n      name: name,\n      email: email,\n      message: message\n    };\n    RestClient.PostRequest(AppUrl.ContactSend, JSON.stringify(jsonObject)).then(result => {\n      if (result == 1) {\n        submitContact.innerText = 'Send';\n        contactForm.reset();\n        alert('Message Send Successfully');\n      } else {\n        submitContact.innerText = 'Send';\n        alert('Something Went Wrong !');\n      }\n    }).catch(error => {\n      submitContact.innerText = 'Send';\n      alert(\"Error\");\n    });\n  }\n\n  render() {\n    if (this.state.error === true) {\n      return React.createElement(WentWrong, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: 6,\n        md: 6,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"serviceName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Quick Connect\"), React.createElement(Form, {\n        id: \"contactForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"serviceDescription\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Form.Control, {\n        id: \"name\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"serviceDescription\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Email Address\"), React.createElement(Form.Control, {\n        id: \"email\",\n        type: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"serviceDescription\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Message\"), React.createElement(Form.Control, {\n        id: \"message\",\n        as: \"textarea\",\n        rows: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"primary\",\n        id: \"submitContact\",\n        onClick: this.sendContact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Send\"))), React.createElement(Col, {\n        lg: 6,\n        md: 6,\n        sm: 12,\n        className: this.state.loaderClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"serviceName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Discuss Now\"), React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 6,\n        md: 6,\n        sm: 12,\n        className: this.state.mainDivClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"serviceName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Discuss Now\"), React.createElement(\"p\", {\n        className: \"serviceDescription\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.state.address), React.createElement(\"p\", {\n        className: \"serviceDescription\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \" \", React.createElement(FontAwesomeIcon, {\n        icon: faEnvelope,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), \" \", this.state.email), React.createElement(\"p\", {\n        className: \"serviceDescription\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \" \", React.createElement(FontAwesomeIcon, {\n        icon: faPhone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), \" \", this.state.phone)))));\n    }\n  }\n\n}\n\nexport default ContactSection;","map":{"version":3,"sources":["/home/durjoy/Projects/dynamicSite/src/components/ContactSection/ContactSection.js"],"names":["React","Component","Fragment","Button","Col","Container","Form","Row","FontAwesomeIcon","faEnvelope","faPhone","RestClient","AppUrl","Loader","WentWrong","ContactSection","constructor","state","address","email","phone","loaderClass","mainDivClass","error","componentDidMount","sessionFooterData","sessionStorage","getItem","GetRequest","Footer","then","result","jsonData","setState","setItem","JSON","stringify","catch","loading","footerDataJSON","parse","sendContact","name","document","getElementById","value","message","contactForm","submitContact","jsonObject","PostRequest","ContactSend","innerText","reset","alert","render"],"mappings":"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","sourcesContent":["import React, {Component,Fragment} from 'react';\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEnvelope, faPhone} from \"@fortawesome/free-solid-svg-icons\";\r\nimport RestClient from \"../../RestAPI/RestClient\";\r\nimport AppUrl from \"../../RestAPI/AppUrl\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport WentWrong from \"../WentWrong/WentWrong\";\r\n\r\nclass ContactSection extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            address: '',\r\n            email: '',\r\n            phone: '',\r\n            loaderClass: \"\",\r\n            mainDivClass: \"d-none\",\r\n            error: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const sessionFooterData = sessionStorage.getItem('FooterData');\r\n        if(sessionFooterData == null) {\r\n            RestClient.GetRequest(AppUrl.Footer).then(result => {\r\n                const jsonData = (result)[0];\r\n                this.setState({\r\n                    address:result[0]['address'],\r\n                    email: result[0]['email'],\r\n                    phone: result[0]['phone'],\r\n                    loaderClass:\"d-none\",\r\n                    mainDivClass:\"\"\r\n                })\r\n                sessionStorage.setItem('FooterData', JSON.stringify(jsonData));\r\n            }).catch(error => {\r\n                this.setState({error:true, loading:false})\r\n            })\r\n        } else {\r\n            const footerDataJSON = JSON.parse(sessionFooterData);\r\n            this.setState({\r\n                address:footerDataJSON['address'],\r\n                email: footerDataJSON['email'],\r\n                phone: footerDataJSON['phone'],\r\n                loaderClass:\"d-none\",\r\n                mainDivClass:\"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    sendContact(){\r\n        let name = document.getElementById(\"name\").value;\r\n        let email = document.getElementById(\"email\").value;\r\n        let message = document.getElementById(\"message\").value;\r\n        let contactForm = document.getElementById(\"contactForm\");\r\n        let submitContact = document.getElementById(\"submitContact\");\r\n\r\n        let jsonObject={name:name, email:email, message:message};\r\n        \r\n\r\n        RestClient.PostRequest(AppUrl.ContactSend,JSON.stringify(jsonObject)).then(result => {\r\n            if(result == 1) {\r\n                submitContact.innerText = 'Send'\r\n                contactForm.reset();\r\n                alert('Message Send Successfully')\r\n            } else {\r\n                submitContact.innerText = 'Send'\r\n                alert('Something Went Wrong !')\r\n            }\r\n        }).catch(error => {\r\n            submitContact.innerText = 'Send'\r\n            alert(\"Error\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error === true) {\r\n            return <WentWrong />\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <Container className=\"mt-5\">\r\n                        <Row>\r\n                            <Col lg={6} md={6} sm={12}>\r\n                                <h1 className=\"serviceName\">Quick Connect</h1>\r\n\r\n                                <Form id=\"contactForm\">\r\n                                    <Form.Group>\r\n                                        <Form.Label className=\"serviceDescription\" >Name</Form.Label>\r\n                                        <Form.Control id=\"name\" type=\"text\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label className=\"serviceDescription\" >Email Address</Form.Label>\r\n                                        <Form.Control id=\"email\" type=\"email\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label className=\"serviceDescription\" >Message</Form.Label>\r\n                                        <Form.Control id=\"message\" as=\"textarea\" rows=\"3\" />\r\n                                    </Form.Group>\r\n\r\n\r\n                                    <Button variant=\"primary\" id=\"submitContact\" onClick={this.sendContact}>\r\n                                        Send\r\n                                    </Button>\r\n                                </Form>\r\n\r\n                            </Col>\r\n\r\n                            <Col lg={6} md={6} sm={12} className={this.state.loaderClass}>\r\n                                <h1 className=\"serviceName\">Discuss Now</h1>\r\n                                <Loader />\r\n                            </Col>\r\n\r\n                            <Col lg={6} md={6} sm={12} className={this.state.mainDivClass}>\r\n                                <h1 className=\"serviceName\">Discuss Now</h1>\r\n                                <p className=\"serviceDescription\" >{this.state.address}</p>\r\n                                <p className=\"serviceDescription\" > <FontAwesomeIcon  icon={faEnvelope} /> {this.state.email}</p>\r\n                                <p className=\"serviceDescription\" > <FontAwesomeIcon  icon={faPhone} /> {this.state.phone}</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContactSection;"]},"metadata":{},"sourceType":"module"}