{"ast":null,"code":"var _jsxFileName = \"/home/durjoy/Projects/dynamicSite/src/components/ClientReview/ClientReview.js\";\nimport React, { Component, Fragment } from 'react';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from \"react-slick\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport RestClient from \"../../RestAPI/RestClient\";\nimport AppUrl from \"../../RestAPI/AppUrl\";\nimport Loader from \"../Loader/Loader\";\nimport WentWrong from \"../WentWrong/WentWrong\";\n\nclass ClientReview extends Component {\n  constructor() {\n    super();\n    this.state = {\n      myData: [],\n      loading: true,\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    const homeVideoData = sessionStorage.getItem('homeVideo');\n\n    if (homeVideoData == null) {\n      RestClient.GetRequest(AppUrl.ClientReview).then(result => {\n        if (result == null) {\n          this.setState({\n            error: true,\n            loading: false\n          });\n        } else {\n          this.setState({\n            myData: result,\n            loading: false\n          });\n          sessionStorage.setItem('homeService', JSON.stringify(result));\n        }\n      }).catch(error => {\n        this.setState({\n          error: true,\n          loading: false\n        });\n      });\n    } else {\n      const homeServiceJSON = JSON.parse(homeServiceData);\n      this.setState({\n        myData: homeServiceJSON,\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    if (this.state.error == true) {\n      return React.createElement(WentWrong, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    } else {\n      if (this.state.loading == true) {\n        return React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      } else {\n        var settings = {\n          autoplaySpeed: 3000,\n          autoplay: true,\n          dots: true,\n          infinite: true,\n          speed: 3000,\n          vertical: true,\n          verticalSwiping: true,\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          responsive: [{\n            breakpoint: 1024,\n            settings: {\n              slidesToShow: 1,\n              slidesToScroll: 1,\n              infinite: true,\n              dots: true\n            }\n          }, {\n            breakpoint: 600,\n            settings: {\n              slidesToShow: 1,\n              slidesToScroll: 1,\n              initialSlide: 1\n            }\n          }, {\n            breakpoint: 480,\n            settings: {\n              slidesToShow: 1,\n              slidesToScroll: 1\n            }\n          }]\n        };\n        const myList = this.state.myData;\n        const myView = myList.map(data => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, React.createElement(Row, {\n            className: \"text-center justify-content-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, React.createElement(Col, {\n            lg: 6,\n            md: 6,\n            sm: 12,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"circleImg\",\n            src: data.client_image,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }), React.createElement(\"h1\", {\n            className: \"serviceName\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, data.client_name), React.createElement(\"p\", {\n            className: \"serviceDescription\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, data.client_comment))));\n        });\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(Container, {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"serviceMainTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"CLIENT SAYS\"), React.createElement(Slider, Object.assign({}, settings, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }), myView)));\n      }\n    }\n  }\n\n}\n\nexport default ClientReview;","map":{"version":3,"sources":["/home/durjoy/Projects/dynamicSite/src/components/ClientReview/ClientReview.js"],"names":["React","Component","Fragment","Slider","Col","Container","Row","RestClient","AppUrl","Loader","WentWrong","ClientReview","constructor","state","myData","loading","error","componentDidMount","homeVideoData","sessionStorage","getItem","GetRequest","then","result","setState","setItem","JSON","stringify","catch","homeServiceJSON","parse","homeServiceData","render","settings","autoplaySpeed","autoplay","dots","infinite","speed","vertical","verticalSwiping","slidesToShow","slidesToScroll","responsive","breakpoint","initialSlide","myList","myView","map","data","client_image","client_name","client_comment"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport RestClient from \"../../RestAPI/RestClient\";\r\nimport AppUrl from \"../../RestAPI/AppUrl\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport WentWrong from \"../WentWrong/WentWrong\";\r\n\r\nclass ClientReview extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            myData: [],\r\n            loading: true,\r\n            error: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const homeVideoData = sessionStorage.getItem('homeVideo');\r\n        if(homeVideoData == null) {\r\n            RestClient.GetRequest(AppUrl.ClientReview).then(result => {\r\n                if(result == null) {\r\n                    this.setState({error:true, loading:false})\r\n                } else {\r\n                    this.setState({myData:result, loading:false})\r\n                    sessionStorage.setItem('homeService', JSON.stringify(result));\r\n                }\r\n            }).catch(error => {\r\n                this.setState({error:true, loading:false})\r\n            })\r\n        } else {\r\n            const homeServiceJSON = JSON.parse(homeServiceData);\r\n            this.setState({myData:homeServiceJSON, loading:false})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error == true) {\r\n            return <WentWrong />\r\n        } else {\r\n            if(this.state.loading == true) {\r\n                return <Loader />\r\n            } else {\r\n                var settings = {\r\n                    autoplaySpeed:3000,\r\n                    autoplay:true,\r\n                    dots: true,\r\n                    infinite: true,\r\n                    speed: 3000,\r\n                    vertical:true,\r\n                    verticalSwiping:true,\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                    responsive: [\r\n                        {\r\n                            breakpoint: 1024,\r\n                            settings: {\r\n                                slidesToShow: 1,\r\n                                slidesToScroll: 1,\r\n                                infinite: true,\r\n                                dots: true\r\n                            }\r\n                        },\r\n                        {\r\n                            breakpoint: 600,\r\n                            settings: {\r\n                                slidesToShow: 1,\r\n                                slidesToScroll: 1,\r\n                                initialSlide: 1\r\n                            }\r\n                        },\r\n                        {\r\n                            breakpoint: 480,\r\n                            settings: {\r\n                                slidesToShow: 1,\r\n                                slidesToScroll: 1\r\n                            }\r\n                        }\r\n                    ]\r\n                };\r\n\r\n                const myList = this.state.myData;\r\n                const myView = myList.map(data => {\r\n                    return  <div>\r\n                        <Row className=\"text-center justify-content-center\">\r\n                            <Col lg={6} md={6} sm={12}>\r\n                                <img className=\"circleImg\" src={data.client_image}/>\r\n                                <h1 className=\"serviceName\">{data.client_name}</h1>\r\n                                <p className=\"serviceDescription\" >{data.client_comment}</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                })\r\n\r\n                return (\r\n                    <Fragment>\r\n\r\n                        <Container className=\"text-center\">\r\n                            <h1 className=\"serviceMainTitle\">CLIENT SAYS</h1>\r\n                            <Slider {...settings}>\r\n                                {myView}\r\n                            </Slider>\r\n                        </Container>\r\n                    </Fragment>\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ClientReview;"]},"metadata":{},"sourceType":"module"}