{"ast":null,"code":"var _jsxFileName = \"/home/durjoy/projects/dynamicSite/src/components/AllProjects/AllProjects.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Button, Card, Col, Container, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport RestClient from \"../../RestAPI/RestClient\";\nimport AppUrl from \"../../RestAPI/AppUrl\";\nimport Loader from \"../Loader/Loader\";\n\nclass AllProjects extends Component {\n  constructor() {\n    super();\n    this.state = {\n      myData: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    RestClient.GetRequest(AppUrl.ProjectAll).then(result => {\n      this.setState({\n        myData: result,\n        loading: false\n      });\n    }).catch(error => {});\n  }\n\n  render() {\n    if (this.state.loading == true) {\n      return React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    } else {\n      const myList = this.state.myData;\n      const myView = myList.map(data => {\n        return React.createElement(Col, {\n          sm: 12,\n          md: 6,\n          lg: 4,\n          className: \"p-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: \"projectCard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(Card.Img, {\n          variant: \"top\",\n          src: data.image_one,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }), React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          className: \"projectCardTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, data.project_name), React.createElement(Card.Text, {\n          className: \"projectCardDes\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, data.short_description), React.createElement(Button, {\n          variant: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(Link, {\n          className: \"link-style\",\n          to: \"/ProjectDetails/\" + data.id + \"/\" + data.project_name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"Details\")))));\n      });\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"text-center mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, myView)));\n    }\n  }\n\n}\n\nexport default AllProjects;","map":{"version":3,"sources":["/home/durjoy/projects/dynamicSite/src/components/AllProjects/AllProjects.js"],"names":["React","Component","Fragment","Button","Card","Col","Container","Row","Link","RestClient","AppUrl","Loader","AllProjects","constructor","state","myData","loading","componentDidMount","GetRequest","ProjectAll","then","result","setState","catch","error","render","myList","myView","map","data","image_one","project_name","short_description","id"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport {Button, Card, Col, Container, Row} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport RestClient from \"../../RestAPI/RestClient\";\r\nimport AppUrl from \"../../RestAPI/AppUrl\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nclass AllProjects extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            myData: [],\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        RestClient.GetRequest(AppUrl.ProjectAll).then(result => {\r\n            this.setState({myData:result, loading: false})\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.loading == true) {\r\n            return <Loader />\r\n        } else {\r\n            const myList = this.state.myData;\r\n            const myView = myList.map(data => {\r\n                return  <Col sm={12} md={6} lg={4} className=\"p-2\">\r\n                    <Card className=\"projectCard\">\r\n                        <Card.Img variant=\"top\" src={data.image_one}/>\r\n                        <Card.Body>\r\n                            <Card.Title className=\"projectCardTitle\">{data.project_name}</Card.Title>\r\n                            <Card.Text className=\"projectCardDes\">\r\n                                {data.short_description}\r\n                            </Card.Text>\r\n                            <Button variant=\"primary\"><Link className=\"link-style\" to={\"/ProjectDetails/\"+data.id+\"/\"+data.project_name}>Details</Link></Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            });\r\n\r\n            return (\r\n                <Fragment>\r\n                    <Container className=\"text-center mt-5\">\r\n                        <Row>\r\n                            {myView}\r\n                        </Row>\r\n                    </Container>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default AllProjects;"]},"metadata":{},"sourceType":"module"}