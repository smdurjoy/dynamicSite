{"ast":null,"code":"var _jsxFileName = \"/home/durjoy/projects/dynamicSite/src/components/ClientReview/ClientReview.js\";\nimport React, { Component, Fragment } from 'react';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from \"react-slick\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport RestClient from \"../../RestAPI/RestClient\";\nimport AppUrl from \"../../RestAPI/AppUrl\";\nimport Loader from \"../Loader/Loader\";\n\nclass ClientReview extends Component {\n  constructor() {\n    super();\n    this.state = {\n      myData: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    RestClient.GetRequest(AppUrl.ClientReview).then(result => {\n      this.setState({\n        myData: result,\n        loading: false\n      });\n    }).catch(error => {});\n  }\n\n  render() {\n    if (this.state.loading == true) {\n      return React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    } else {\n      var settings = {\n        autoplaySpeed: 3000,\n        autoplay: true,\n        dots: true,\n        infinite: true,\n        speed: 3000,\n        vertical: true,\n        verticalSwiping: true,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        responsive: [{\n          breakpoint: 1024,\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            infinite: true,\n            dots: true\n          }\n        }, {\n          breakpoint: 600,\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            initialSlide: 1\n          }\n        }, {\n          breakpoint: 480,\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1\n          }\n        }]\n      };\n      const myList = this.state.myData;\n      const myView = myList.map(data => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(Row, {\n          className: \"text-center justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Col, {\n          lg: 6,\n          md: 6,\n          sm: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"circleImg\",\n          src: data.client_image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }), React.createElement(\"h1\", {\n          className: \"serviceName\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, data.client_name), React.createElement(\"p\", {\n          className: \"serviceDescription\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, data.client_comment))));\n      });\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"serviceMainTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"CLIENT SAYS\"), React.createElement(Slider, Object.assign({}, settings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), myView)));\n    }\n  }\n\n}\n\nexport default ClientReview;","map":{"version":3,"sources":["/home/durjoy/projects/dynamicSite/src/components/ClientReview/ClientReview.js"],"names":["React","Component","Fragment","Slider","Col","Container","Row","RestClient","AppUrl","Loader","ClientReview","constructor","state","myData","loading","componentDidMount","GetRequest","then","result","setState","catch","error","render","settings","autoplaySpeed","autoplay","dots","infinite","speed","vertical","verticalSwiping","slidesToShow","slidesToScroll","responsive","breakpoint","initialSlide","myList","myView","map","data","client_image","client_name","client_comment"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport RestClient from \"../../RestAPI/RestClient\";\r\nimport AppUrl from \"../../RestAPI/AppUrl\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nclass ClientReview extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            myData: [],\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        RestClient.GetRequest(AppUrl.ClientReview).then(result => {\r\n            this.setState({myData:result, loading:false})\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.loading == true) {\r\n            return <Loader />\r\n        } else {\r\n            var settings = {\r\n                autoplaySpeed:3000,\r\n                autoplay:true,\r\n                dots: true,\r\n                infinite: true,\r\n                speed: 3000,\r\n                vertical:true,\r\n                verticalSwiping:true,\r\n                slidesToShow: 1,\r\n                slidesToScroll: 1,\r\n                responsive: [\r\n                    {\r\n                        breakpoint: 1024,\r\n                        settings: {\r\n                            slidesToShow: 1,\r\n                            slidesToScroll: 1,\r\n                            infinite: true,\r\n                            dots: true\r\n                        }\r\n                    },\r\n                    {\r\n                        breakpoint: 600,\r\n                        settings: {\r\n                            slidesToShow: 1,\r\n                            slidesToScroll: 1,\r\n                            initialSlide: 1\r\n                        }\r\n                    },\r\n                    {\r\n                        breakpoint: 480,\r\n                        settings: {\r\n                            slidesToShow: 1,\r\n                            slidesToScroll: 1\r\n                        }\r\n                    }\r\n                ]\r\n            };\r\n\r\n            const myList = this.state.myData;\r\n            const myView = myList.map(data => {\r\n                return  <div>\r\n                    <Row className=\"text-center justify-content-center\">\r\n                        <Col lg={6} md={6} sm={12}>\r\n                            <img className=\"circleImg\" src={data.client_image}/>\r\n                            <h1 className=\"serviceName\">{data.client_name}</h1>\r\n                            <p className=\"serviceDescription\" >{data.client_comment}</p>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            })\r\n\r\n            return (\r\n                <Fragment>\r\n\r\n                    <Container className=\"text-center\">\r\n                        <h1 className=\"serviceMainTitle\">CLIENT SAYS</h1>\r\n                        <Slider {...settings}>\r\n                            {myView}\r\n                        </Slider>\r\n                    </Container>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default ClientReview;"]},"metadata":{},"sourceType":"module"}